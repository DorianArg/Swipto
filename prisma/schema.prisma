generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String      @id
  badges  UserBadge[]
  swipes  Swipe[]
}

model Coin {
  id     String     @id
  symbol String
  name   String
  likes  SeasonLike[]
  swipes Swipe[]
}

model Swipe {
  id        String   @id @default(cuid())
  userId    String
  coinId    String
  action    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  coin      Coin     @relation(fields: [coinId], references: [id])
  @@index([createdAt])
}

model Season {
  id      String      @id @default(cuid())
  label   String
  startAt DateTime
  endAt   DateTime
  likes   SeasonLike[]
  @@index([startAt, endAt])
}

model SeasonLike {
  seasonId  String
  coinId    String
  likeCount Int     @default(0)
  season    Season  @relation(fields: [seasonId], references: [id])
  coin      Coin    @relation(fields: [coinId], references: [id])
  @@id([seasonId, coinId])
}

model Badge {
  id       String      @id @default(cuid())
  code     String      @unique
  label    String
  icon     String?
  ruleJson Json
  users    UserBadge[]
}

model UserBadge {
  userId     String
  badgeId    String
  unlockedAt DateTime @default(now())
  contextJson Json?
  user       User     @relation(fields: [userId], references: [id])
  badge      Badge    @relation(fields: [badgeId], references: [id])
  @@id([userId, badgeId])
}

model ChallengeProgress {
  userId    String
  code      String
  progress  Int
  target    Int
  updatedAt DateTime @default(now())
  @@id([userId, code])
}

